/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat;

import static java.awt.event.KeyEvent.VK_ENTER;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;

/**
 *
 * @author abc
 */
public class startup extends javax.swing.JFrame 
{

    private Send sclass=null;
    private ReceiveThread rt;
    private int flag=0;
    /**
     * Creates new form startup
     */
    
    
  class ReceiveThread implements Runnable
  {
      
      public void run()
      {
          while(true)
          {
           String s=sclass.receiveText();
       System.out.println("runn executed!");
       txtA.append("\nReply: "+s);
        try {
            Thread.sleep(50);
        } catch (InterruptedException ex) {
            Logger.getLogger(startup.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
      
      }
  }
    public startup() {
         initComponents();
        
     
       
        
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        grp = new javax.swing.ButtonGroup();
        txts = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtA = new javax.swing.JTextArea();
        lbl1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        server = new javax.swing.JRadioButton();
        client = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        chk1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsActionPerformed(evt);
            }
        });
        txts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsKeyPressed(evt);
            }
        });

        jButton1.setText("send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtA.setEditable(false);
        txtA.setColumns(20);
        txtA.setLineWrap(true);
        txtA.setRows(5);
        txtA.setToolTipText("");
        jScrollPane1.setViewportView(txtA);

        lbl1.setText("No button selected!");

        jButton2.setText("sile");

        grp.add(server);
        server.setText("Server");
        server.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverActionPerformed(evt);
            }
        });

        grp.add(client);
        client.setText("Client");
        client.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientActionPerformed(evt);
            }
        });

        jLabel1.setText("Default portno=4567\nDefault HostName=abc-PC");

        chk1.setText("Enter is send");
        chk1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chk1)
                    .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txts, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(client)
                                .addComponent(server)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(server)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(client)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(5, 5, 5)
                .addComponent(chk1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>                        

    private void txtsActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        
    }                                    

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       
       
        {
            if(flag==0)
            {
                
                ButtonModel m;   
        if((m=grp.getSelection())!=null||sclass==null)
        {  
            flag=1;
            
            
            lbl1.setText("Wait Establishing Connection...");
           
            if(server.isSelected())
            {
                  sclass=new SocketServer();
            }
            else
            {
                  sclass=new Client();
                 
            }     
            if(sclass.isConnected())
                  {
                     lbl1.setText("Connected Successfully! and Receiver Thread started");
                    
                    }
             if(sclass==null)
                 flag=0;
              else
             {
                 JOptionPane.showMessageDialog(this, "Thread made!");
                          rt=new ReceiveThread();
                          new Thread(rt).start();
             }
           
    }
         else
        {
            JOptionPane.showMessageDialog( null,"Please select whether your PC is a server or not");
            lbl1.setText("No button selected!");
            
        }
            }
            
            if(sclass!=null)
            {
                String s=txts.getText();
                lbl1.setText("Connected Successfully!");
                
                try
                {
                sclass.sendText(s);
                txts.setText("");
//                JOptionPane.showMessageDialog(null, "Text sent");
                
                txtA.append("\n"+s);
                
                }
                catch(Exception e)
                {JOptionPane.showMessageDialog(null, e);}
            }
            else
            {lbl1.setText("Unable to Connect");//System.exit(0);
            
            }
        
             
           }
        
       
    }                                        

    private void serverActionPerformed(java.awt.event.ActionEvent evt) {                                       
  // TODO add your handling code here:
        if(server.isSelected())
            lbl1.setText("Server generation in process...");
    }                                      

    private void clientActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        lbl1.setText("Trying to connect to the server...");
    }                                      

    private void chk1ActionPerformed(java.awt.event.ActionEvent evt) {                                     
            
    }                                    

    private void txtsKeyPressed(java.awt.event.KeyEvent evt) {                                
        // TODO add your handling code here:
        if(evt.getKeyCode()==VK_ENTER&&chk1.isSelected())
        {
            jButton1.doClick();
        }
    }                               

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(startup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

      
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new startup().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JCheckBox chk1;
    private javax.swing.JRadioButton client;
    private javax.swing.ButtonGroup grp;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JRadioButton server;
    private javax.swing.JTextArea txtA;
    private javax.swing.JTextField txts;
    // End of variables declaration                   
}
